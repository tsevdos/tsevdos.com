---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import { getAllSortedPosts, type Page, type Post } from "../lib/helpers";
import Config from "../lib/config";

export const getStaticPaths = (async () => {
  const pages = await getCollection("pages");
  const posts = await getAllSortedPosts();

  return [...pages, ...posts].map((page) => ({ params: { slug: page.slug }, props: { ...page } }));
}) satisfies GetStaticPaths;

type Props = Page | Post;

console.log(Astro.props);

const {
  data: { title, date, type = null, categories = [] },
  render,
} = Astro.props;
const { Content } = await render();
const isPost = type === "post";
const formattedDate = new Date(date).toLocaleDateString("en-GB");
---

<Layout title={`${title} - ${Config.title}`}>
  <div class="bg-white">
    <div class="space-y-16 container xl:max-w-7xl mx-auto px-4 py-16 lg:px-8 lg:py-32">
      <div class="text-center prose prose-indigo prose-lg mx-auto">
        {
          isPost && (
            <div class="text-sm uppercase font-bold tracking-wider mb-1 text-indigo-700">
              {categories.map((category: string) => category).join(", ")}
            </div>
          )
        }
        <h1 class="text-3xl md:text-4xl font-extrabold mb-4">{title}</h1>
        {
          isPost && (
            <p class="text-lg font-semibold md:text-xl md:leading-relaxed text-gray-600 lg:w-2/3 mx-auto">
              {formattedDate}
            </p>
          )
        }
      </div>

      <article class="prose prose-indigo prose-lg mx-auto">
        <Content />
      </article>
    </div>
  </div>
</Layout>
